perl_require /etc/nginx/perl/hashed_access.pl;

server {
    listen       80;
    server_name  _;

    root /usr/share/tg-data;

    # Allow access to files in subfolders that match the Telegram bot token pattern
    # for plain token access, like this:
    # http://example.com/1234567891:AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/music/file_1.mp3
    location ~* ^/[0-9]+:[A-Za-z0-9_-]+/ {
        try_files $uri =444;
    }

    # Allow access to files without exposing the bot token
    # To access a file, construct a URL with three parts:
    # 1. The MD5 hash of the bot token for example
    #    echo -n '1234567891:AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA' | md5 # === b28bda2aab71870643921c7fb4942394
    # 2. The clear text subfolder path within that folder (e.g., '/music/'),
    # 3. The MD5 hash of the combination of token + filename. for example
    #   if you want to access 1234567891:AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/music/file_1.mp3
    #   echo -n '1234567891:AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA|file_1.mp3' | md5 # === 0deaf046fe2deb200987e34883afca6b
    #   the full path should be b28bda2aab71870643921c7fb4942394/music/0deaf046fe2deb200987e34883afca6b
    #   and the url: http://example.com/b28bda2aab71870643921c7fb4942394/music/0deaf046fe2deb200987e34883afca6b
    #
    location ~* "^/[a-f0-9]{32}/" {
        perl hashed_access::handler;
    }

    # Deny access to everything else
    location / {
        return 444;
    }
}